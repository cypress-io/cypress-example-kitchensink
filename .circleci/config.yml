# testing using CircleCI orb
# see https://on.cypress.io/circleci-orb

# for non-orb configuration see old commit
# https://github.com/cypress-io/cypress-example-kitchensink/blob/aabb10cc1bb9dee88e1bf28e0af5e9661427ee7a/circle.yml

# to use CircleCI orbs need to use version >= 2.1
version: 2.1
orbs:
  # use Cypress orb from CircleCI registry
  cypress: cypress-io/cypress@3.0.0

executors:
  mac:
    macos:
      # Executor should have Node >= required version
      xcode: "14.0.0"
  win:
    # copied the parameters from
    # https://circleci.com/developer/orbs/orb/circleci/windows
    machine:
      image: "windows-server-2019-vs2019:stable"
      resource_class: "windows.medium"
      shell: "bash.exe"
  browsers:
    docker:
      - image: 'cypress/browsers:node14.16.0-chrome90-ff88'

jobs:
  win-test:
    working_directory: ~/app
    executor: win
    steps:
      - checkout

      - restore_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      - run: npm ci
      - run: npm run cy:verify
      - run: npm run cy:info

      - save_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            # could not use environment variables for some reason
            - C:\Users\circleci\AppData\Local\Cypress\Cache
            - C:\Users\circleci\AppData\Roaming\npm-cache

      # if you want to test execa's behavior on Windows
      # - run: node ./scripts/test-execa

      - run:
          name: 'Start server'
          command: npm run start
          background: true

      - run:
          name: 'Run Cypress tests'
          command: npm run e2e:record -- --env circle=true
          no_output_timeout: '1m'
      - store_artifacts:
          path: cypress\screenshots
      - store_artifacts:
          path: cypress\videos

  win-test-chrome:
    working_directory: ~/app
    executor: win
    steps:
      - checkout

      - restore_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      # install Chrome browser on Windows machine using Chocolatey
      # https://chocolatey.org/packages/GoogleChrome
      - run: choco install googlechrome
      - run: npm ci
      - run: npm run cy:verify
      - run: npm run cy:info

      - save_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            # could not use environment variables for some reason
            - C:\Users\circleci\AppData\Local\Cypress\Cache
            - C:\Users\circleci\AppData\Roaming\npm-cache

      # if you want to test execa's behavior on Windows
      # - run: node ./scripts/test-execa

      - run:
          name: 'Start server'
          command: npm run start
          background: true

      - run:
          name: 'Run Cypress tests'
          command: npm run e2e:record:chrome -- --env circle=true
          no_output_timeout: '1m'
      - store_artifacts:
          path: cypress\screenshots
      - store_artifacts:
          path: cypress\videos

  win-test-firefox:
    working_directory: ~/app
    executor: win
    steps:
      - checkout

      - restore_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      # install Firefox browser on Windows machine using Chocolatey
      # https://chocolatey.org/packages/Firefox
      - run: choco install firefox
      - run: npm ci
      - run: npm run cy:verify
      - run: npm run cy:info

      - save_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            # could not use environment variables for some reason
            - C:\Users\circleci\AppData\Local\Cypress\Cache
            - C:\Users\circleci\AppData\Roaming\npm-cache

      # if you want to test execa's behavior on Windows
      # - run: node ./scripts/test-execa

      - run:
          name: 'Start server'
          command: npm run start
          background: true

      - run:
          name: 'Run Cypress tests'
          command: npm run e2e:record:firefox -- --env circle=true
          no_output_timeout: '1m'
      - store_artifacts:
          path: cypress\screenshots
      - store_artifacts:
          path: cypress\videos

  mac-test:
    executor: mac
    steps:
      - cypress/install:
          post-install: "npm run build"
      # show Cypress cache folder and binary versions
      # to check if we are caching previous binary versions
      - run: npx cypress cache path
      - run: npx cypress cache list
      - run: npx cypress info
      - cypress/run-tests:
          start-command: 'npm run start'
          cypress-command: 'npx cypress run --record --group Mac build'


  release:
    executor: cypress/default
    steps:
      - attach_workspace:
          at: ~/
      - run: npm run semantic-release

workflows:
  win-build:
    jobs:
      - win-test
      - win-test-chrome
      - win-test-firefox

  mac-build:
    jobs:
      - mac-test

  linux-build:
    jobs:
      # checks out code and installs dependencies once
      # runs on 3 machines, load balances tests
      # and records on Cypress Dashboard
      - cypress/run:
          name: '3 machines'
          post-install: 'npm run build'
          start-command: 'npm run start'
          cypress-command: 'npx cypress run --record --parallel --group 3x-electron on CircleCI'
          parallelism: 3
          post-steps:
            # show Cypress cache folder and binary versions
            # to check if we are caching previous binary versions
            - run: npx cypress cache path
            - run: npx cypress cache list
            - run: npx cypress info
            # let's print version info
            - run: npx cypress version
            - run: npx cypress version --component package
            - run: npx cypress version --component binary
            - run: npx cypress version --component electron
            - run: npx cypress version --component node
    

      # run on 2 machines using Chrome browser
      - cypress/run:
          name: '2 machines using Chrome'
          start-command: 'npm run start'
          install-browsers: true
          cypress-command: 'npx cypress run --browser chrome --record --parallel --group 2x-chrome on CircleCI'
          parallelism: 2

      - cypress/run:
          name: '2 machines using Firefox'
          start-command: 'npm run start'
          install-browsers: true
          cypress-command: 'npx cypress run --browser firefox --record --parallel --group 2x-firefox on CircleCI'
          parallelism: 2

      - release:
          filters:
            branches:
              only:
                - master
          requires:
            - 3 machines
            - 2 machines using Chrome
            - 2 machines using Firefox
