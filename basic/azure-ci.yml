jobs:
  # Example job that runs end-to-end tests using Cypress test runner
  #   https://www.cypress.io/

  # Job names can contain alphanumeric characters and '_', cannot start with a number
  - job: Cypress_e2e_tests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
          displayName: 'Install Node.js'

      # NPM modules and Cypress binary should be cached
      # otherwise the install will be too slow
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/caching/?view=azure-devops
      # since the username / user home directory are not available via system variables
      # (there is even an open question about it)
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops
      # just use "/home/vsts" for now
      - task: CacheBeta@1
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: /home/vsts/.npm
          restoreKeys: npm | $(Agent.OS) | package-lock.json
        displayName: Cache NPM packages
      - task: CacheBeta@1
        inputs:
          key: cypress | $(Agent.OS) | package-lock.json
          path: /home/vsts/.cache/Cypress
          restoreKeys: cypress | $(Agent.OS) | package-lock.json
        displayName: Cache Cypress binary

      - script: npm ci
        displayName: 'Install NPM dependencies'

      - script: npm run cy:verify
        displayName: 'Cypress verify'

      # The next command starts the server and runs Cypress end-to-end tests against it.
      # The test artifacts (video, screenshots, test output) will be uploaded to Cypress dashboard
      # To record on Cypress dashboard we need to set CYPRESS_RECORD_KEY environment variable
      - script: npm run test:ci:record
        displayName: 'Run Cypress tests'
